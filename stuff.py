from random import randint
from functools import wraps
from typing import Callable
from pizza import Pizza


def log(template: str) -> Callable:
    def deco(func: Callable) -> Callable:
        if not isinstance(template, str):
            raise TypeError("Template should be a string.")

        @wraps(func)
        def wrap(*args, **kwargs) -> Callable:
            ans = func(*args, **kwargs)
            print(template.format(randint(1, 5)))
            return ans

        return wrap

    return deco

@log("{} {} –∑–∞ ‚åö {}–º–∏–Ω!")
def bake(pizza: Pizza) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–∫–µ –ø–∏—Ü—Ü—ã."""
    return "üç∫ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏"


@log("{} {} –∑–∞ ‚åö {}–º–∏–Ω!")
def delivery(pizza: Pizza) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ –ø–∏—Ü—Ü—ã."""
    return "üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏"


@log("{} {} –∑–∞ ‚åö {}–º–∏–Ω!")
def pickup(pizza: Pizza) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∞–º–æ–≤—ã–≤–æ–∑–µ –ø–∏—Ü—Ü—ã."""
    return "üè° –ó–∞–±—Ä–∞–ª–∏"





